"
"
" Settings
"

" set vicmd=vim\ -u\ ~/.plugs.vimrc\ --servername\ default
set vicmd=Vim

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

set trashdir=~/.vifm/Trash/

" This is how many directories to store in the directory history.

set history=100

" Follow links on l or Enter.

set followlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

set number

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set novimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Use KiB, MiB, ... instead of KB, MB, ...

set noiec

" Selected color scheme

colorscheme Black

" The FUSE_HOME directory will be used as a root dir for all FUSE mounts.
" Unless it exists with write/exec permissions set, vifm will attempt to
" create it.

set fusehome=/tmp/vifm_FUSE

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%m/%d/%y\ %H:%M

" Show list of matches on tab complition in command-line mode

set wildmenu

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" highlight search results automatically

set hlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do to much requests to slow file systems

set slowfs=curlftpfs

" Set custom status line look

set statusline="  %t%= %A %10u:%-7g %15s %20d  "

"
"
" Marks
"

nmap ` '

" There's no way to mark `:
nnoremap `` :cd<CR>

"
"
" Commands
"

command R :restart
command rm rm %f
command diff vim -d %f %F
command zip zip -r %f.zip %f
command shellrun !! ./%f
command make !!make
command vimgrep vim "+vimgrep /%a/g %d/**"
command unzip unzip -d %f_ %f
command unszip 7za x %f
" command un7zip 7z e %f
command ungz gunzip %f
command unrar unrar x %f
command tar tar -czf %f.tar.gz %f
command untar tar -xzf %f
command unbz tar -xjf %f
command unxz tar -xvJf %f
command umount udiskie-umount %f
command getphotos gphoto2 --get-all-files
command mkcd :mkdir %a | :cd %a
command C :mkdir %a | :cd %a
command mkdatedir !mkdatedir %a
command mktimedir !mktimedir %a
command FF !firefox-default %f &
command cdgit :execute 'cd' system('git rev-parse --git-dir')

" This conflicts with fish auto-rename on cd
" command Ren :screen | :execute "!tmux rename-window `fish -c prompt_pwd`/" | :screen

command mmt sudo mount %f ~/mnt
command dmt sudo umount ~/mnt

command Gcommit !git commit -qva
command Gadd :!git add %f

nnoremap ;hs :Gadd<CR>
nnoremap ;hh :Gcommit<CR>

" command Gall :!git-add-commit %f
nmap ;; :!slap %f<CR>

nmap ;G :!slap<CR>

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf
filetype *.pdf zathura %f,apvlv %f,xpdf %f
fileview *.pdf pdftotext -nopgbrk %c -

" Exe
filetype *.exe wine %f

" PostScript
filextype *.ps,*.ps.gz gv %c %i &

" Djvu
filextype *.djvu apvlv %f

" Audio
filetype *.wav,*.mp3,*.flac,*.ogg,*.m4a,*.bik
       \ {Play using vlc}
       \ vlc -q --one-instance %f &,
       \ {Play using ffplay}
       \ ffplay %c,
       \ {Play using MPlayer}
       \ play_music %f,
fileviewer *.mp3 mp3info

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.vob,*.flvm,*.webm
        \ {View using vlc}
        \ vlc -q --one-instance %f &,
        \ {View using ffplay}
        \ ffplay -fs %c,
        \ {View using Dragon}
        \ dragon %f,
        \ {View using mplayer}
        \ mplayer %f,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.vob
         \ ffprobe -show_files -pretty %f 2> /dev/null

" Web
filetype *.html,*.htm v "%f", firefox-default %f &,links,mozilla,uzbl-browser %f %i &

" Object
filetype *.o nm %f | less

" Image
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,*.webp
        \ {View in sxiv}
        \ sxiv,
        \ {View in gpicview}
        \ gpicview %c,
        \ {View in feh}
        " \ feh -dF %c,
        \ feh -FZ %d --start-at %d/%c 2>/dev/null,
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm convert -identify %f -verbose /dev/null

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f,

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear zip -sf %c

" ArchiveMount
filetype *.tar.bz2,*.tbz2,*.tgz,*.tar.gz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c

" Rar2FsMount
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR,

" Fuse7z
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,

" Office files
filextype *.doc,*.docx,*.xls,*.xlsx libreoffice %f &
fileview *.docx, docx2txt.pl %f -

" Qt projects
filextype *.pro qtcreator %f &

" Qt projects
filextype *.aup audacity %f

" Directories
filextype */
        \ {View in thunar}
        \ Thunar %f &,
fileview */ tree %f

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,dirstack,registers,bookmarks

" Sample mappings

" nmap S :shell<cr>
nmap S :!fish<cr>
nmap s :sort<cr>
nmap w :view<cr>

" nmap o :!gvim --remote-tab-silent %f<cr>
" nmap O :!gvim %f<cr>

nmap æ :!tmux new-window -n $(fish -c prompt_pwd)/ fm .<CR>

" Open file in the background using its default program
nmap gb :file &<cr>l

" Yank current directory path into the clipboard
" nmap yd :!echo %d | xclip %i<cr>
nmap yd :!yankpath %d<CR>

" Yank current file path into the clipboard
" nmap yf :!echo %c:p | xclip %i<cr>
nmap yf :!yankpath %c:p<CR>
" nmap <Space>y :!yankpath %c:p<CR>

" Yank root
nmap yr :!yankpath %c:r <CR>

" Mappings for faster renaming
nmap I cw<c-a>
nmap cc cw<c-u>
nmap A cw<c-w>

" Opening console in current directory
nmap \t :!xterm -fg chartreuse3 -bg black &<cr>

" Opening vim to edit .vifmrc
" nmap ;c :execute ':!v $MYVIFMRC' | restart<cr>
" Change to resolve conflict with :screen
nmap ;c :execute ':!v ~/dot/vifm/vifmrc' | restart<cr>
" Opening gvim to edit .vifmrc
" nmap ;C :execute ':!v $MYVIFMRC' | restart<cr>
nmap ;C :execute ':!v ~/.local.vifmrc' | restart<cr>
" nmap \C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nmap ;w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nmap <f3> :!less %f<cr>
nmap <f4> :edit<cr>
nmap <f5> :copy<cr>
nmap <f6> :move<cr>
nmap <f7> :mkdir<space>
nmap <f8> :delete<cr>

" Shift-J and Shift-K instead of tab:
nmap J <tab>
nmap K <tab>

" M-j M-k to go prev-next like shell
nmap ë :siblprev<CR>
nmap ê :siblnext<CR>
nmap è :cd ..<CR>
" TODO M-l to cd to last child

command FzSibl : let $fzfreturn = term('fz-siblings 2>/dev/tty')
              \| if $fzfreturn != ''
              \|     cd $fzfreturn
              \| endif

" M-r
nmap ò :FzSibl<CR>

" Backspace to go up dir
nmap  h

nmap U :undolist<cr>

command df pydf --bw %S 2> /dev/null
" M-o to show df:
nmap ï :df<CR>

" Show file stats in status
nmap <F1> :!f %f %S<CR>

nmap <Space>s :sync<CR><Tab>

" LocalLeader binds
" TODO mkdir & move target under cursor there
nmap ,i :mkdir<Space>

" Tabs
set tabscope=pane

nmap <Space>1 1gt
nmap <Space>2 2gt
nmap <Space>3 3gt
nmap <Space>4 4gt
nmap <Space>5 5gt
nmap <Space>6 6gt
nmap <Space>7 7gt
nmap <Space>8 8gt
nmap <Space>9 9gt

nmap <Space>c :tabnew<CR>

nmap <Space>, :tabname<Space>

"
"
" Exit
"

nmap <f2> :q<cr>
nmap q :q<cr>

"
"
" Vim terminal-api
"

nmap <Space>j :!send-vim-space j&<CR>
nmap <Space>k :!send-vim-space k&<CR>
nmap <Space>h :!send-vim-space h&<CR>
nmap <Space>l :!send-vim-space l&<CR>

"
"
" Hot locals
"

source ~/.local.vifmrc
