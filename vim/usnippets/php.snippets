# ||
# || Date
# ||

snippet da "date-file-start" "snip.line == 0" e
<?php

// `date-utc`

$0
endsnippet

priority -1

snippet /^ *da(te)?/ "Date" rb
// `date-utc`
$0
endsnippet

priority 0

snippet dd "dd-line-start" b
// `date-jiv`
endsnippet

priority -1

snippet dd "date-inline" w
`date-jiv`
endsnippet

priority 0

# ||
# || Comments
# ||

snippet / "comment-/" w
// ${VISUAL}$0
endsnippet

snippet // "comment-//" w
// ${VISUAL}$0
endsnippet

snippet ; "comment-generic" w
// ${VISUAL}$0
endsnippet

snippet # "comment-#" w
# ${VISUAL}$0
endsnippet

snippet /^(\s*)(// )?(todo|tod|to)/ "TODO-comment" r
`!p
# Whitespace:
if match.group(1) is not None:
	snip.rv = match.group(1)`// TODO ${VISUAL}$0
endsnippet

# ||
# || Basement
# ||

# See UltiSnips-custom-context-snippets
snippet /^$/ "basement-implicit" "snip.line > 0 and re.match('^$', snip.buffer[snip.line-1])" re
/* `date-jiv`
${VISUAL}$0
*/
endsnippet

priority 0

snippet dab "dab" w
// `date-utc`

/* `date-jiv`
${VISUAL}$0
*/
endsnippet

# ||
# || Variables
# ||

snippet $ "$" b
$${1:variable} = ${VISUAL}$0;
endsnippet

# ||
# || Functions
# ||

snippet f "f" b
function ${2:function_name}($3) ${4:$arg} {
	${VISUAL}$0
}
endsnippet

snippet r "return" w
return ${VISUAL}$0;
endsnippet

# ||
# || Printing
# ||

snippet /\b(print|prin|pri|pr|p)/ "print" wr
print($0);
endsnippet

# ||
# || Strings
# ||

snippet ' "string-singlequote" w
'${VISUAL}$0'
endsnippet

snippet " "string-doublequote" w
"${VISUAL}$0"
endsnippet

# ||
# || Booleans
# ||

snippet t "true" w
true
endsnippet

snippet f "false" w
false
endsnippet

# ||
# || Fallbacks
# ||

priority -2

snippet  /;$/ "expand-any-endline-semicolon" rw
; // ${VISUAL}$0
endsnippet

priority -3

snippet  /^\s+([\w_]+)$/ "expand-any-word-endline" rw
`!p
if match.group(0) is not None:
	snip.rv = match.group(0)`(${VISUAL}$0);
endsnippet

priority -4

snippet  /([\w_]+)/ "expand-any-word" rw
`!p
if match.group(0) is not None:
	snip.rv = match.group(0)`(${VISUAL}$0)
endsnippet
