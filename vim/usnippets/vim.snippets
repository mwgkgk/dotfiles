###########################################################################
#                            SnipMate Snippets                            #
###########################################################################
snippet header
" File: ${1:`!v expand('%:t')`}
" Author: ${2:`!v g:snips_author`}
" Description: ${3}
${4:" Last Modified: `!v strftime("%B %d, %Y")`}

$0
endsnippet

snippet gvar "Global / configuration variable"
if !exists("g:${1:MyUltraImportantVar}")
	let g:$1 = ${2:"${3:<tab>}"}
endif
endsnippet

snippet guard
if exists('${1:did_`!p snip.rv = snip.fn.replace('.','_')`}') || &cp${2: || version < 700}
	finish
endif
let $1 = 1${3}
endsnippet

snippet f
function! ${1:function_name}(${2})
	${3:" code}
endfunction
endsnippet

snippet for
for ${1:needle} in ${2:haystack}
	${3:" code}
endfor
endsnippet

snippet wh
while ${1:condition}
	${2:" code}
endw
endsnippet

snippet if
if ${1:condition}
	${2:" code}
endif
endsnippet

snippet ife
if ${1:condition}
	${2}
else
	${3}
endif
endsnippet

# snippet au "Description" !b
# if has('autocmd')
# 	${VISUAL}
#     autocmd ${1:FileType} ${2:vim} $3
# endif
# endsnippet

snippet au "au" b
autocmd ${1:plugs.vimrc} ${2:FileType} ${3:vim} ${VISUAL}$4
endsnippet

snippet aug "aug" b
augroup ${1:vimrc}
	autocmd!
augroup END
endsnippet

snippet p "plug" b
Plug '${VISUAL}$1'
endsnippet

snippet "Plug '\S+'" "plug continued" r
`!p
if match.group(0) is not None:
    snip.rv = match.group(0)`, { '${1:for}' : '$2' }
endsnippet

snippet hi "highlight" b
hi ${1:ColorColumn} ctermbg=${2:255} ctermfg=${3:fg} cterm=none
endsnippet

snippet { "{{{" i
" {{{
${VISUAL}$0
" }}}
endsnippet

snippet } "}}}" b
" }}}
endsnippet

snippet colo "silent! colorscheme" b
silent! colorscheme $0
endsnippet

snippet setl "setl" b
setlocal 
endsnippet

# vim:ft=snippets:
