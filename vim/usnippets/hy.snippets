snippet v "v" b
(setv$1
endsnippet

snippet setv "v" b
(setv$1
endsnippet

snippet f "defn" b
(defn $1 [$2]
	$3)
endsnippet

snippet defn "defn" b
(defn $1 [$2]$3)
endsnippet

snippet defc "defclass" b
(defclass ${1:Classname} [$2]
	[${3:name} None]
	(defn --init-- [self $3]
		(setv self.$3 $3)))
endsnippet

snippet main "main" b
(defmain [&rest args] 
	${VISUAL}$0)
endsnippet

snippet for "for" b
(for [${1:ele} ${2:[1 2 3]}] ($3))
endsnippet

snippet if "if" b
(if ($1)
	${VISUAL}$2)
endsnippet

snippet /imp|i/ "i" br
(import [${1:time} [${2:sleep}]])
endsnippet

snippet p "p" b
(print
endsnippet

snippet do "do" b
(do
	${VISUAL}$0
endsnippet

priority 1

snippet # "#" b
#!/usr/bin/env hy3
endsnippet
