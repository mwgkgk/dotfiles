# ||
# || Modules
# ||

snippet u "use" w
use $0;
endsnippet

snippet utf "utf" w
use utf8;
use open ":std", ":encoding(UTF-8)";
endsnippet

# ||
# || Date
# ||

snippet /^ *da(te)?/ "Date" rb
# `date-utc`
${0}
endsnippet

snippet da "date-file-start" "snip.line == 0" e
#!/usr/bin/env perl

use v5.10;
use strict;
use warnings;

# `date-utc`

$0
endsnippet

snippet dd "dd-inline" w
`!v system('date-jiv | tr -d "\n"')` ${VISUAL}$0
endsnippet

# ||
# || Comments
# ||

snippet ; "comment-generic" w
# ${VISUAL}$0
endsnippet

snippet # "comment-#" w
# ${VISUAL}$0
endsnippet

snippet /^$/ "basement-implicit" "snip.line > 0 and re.match('^$', snip.buffer[snip.line-1])" re
=begin comment `date-jiv`

${VISUAL}$0

=end comment
=cut
endsnippet

# ||
# || Print
# ||

snippet /\b(say|sa|s)/ "say" r
say "${VISUAL}$0";
endsnippet

snippet p "also say" w
say "${VISUAL}$0";
endsnippet

# ||
# || Subroutines
# ||

snippet f "sub"
sub $1 {
	${VISUAL}$0
}
endsnippet

# ||
# || Loops
# ||

snippet for "for"
for (my $${1:var} = 0; $$1 < ${2:expression}; $$1++) {
	${VISUAL}$0
}
endsnippet

snippet fore "foreach"
foreach$1 (@${2:array}) {
	${VISUAL}$0
}
endsnippet

# ||
# || Control flow
# ||

snippet if "if"
if ($1) {
	${VISUAL}$0
}
endsnippet

snippet unless "unless"
unless ($1) {
	${VISUAL}$0
}
endsnippet

snippet while "while"
while ($1) {
	${VISUAL}$0
}
endsnippet

# ||
# || Variables
# ||

snippet /\b(my|m)/ "my" r
my $$1 = ${VISUAL}$0;
endsnippet

# ||
# || Processes
# ||

snippet ` "``" w
`${VISUAL}$0`
endsnippet
