# ||
# || Date
# ||

snippet / *d(a)?(te)?/ "" rb
# `date-utc`${0}
endsnippet

priority -1

snippet dd "dd-inline" w
`!v system('date-jiv | tr -d "\n"')`${0}
endsnippet

priority 0

snippet % "dd-comment" b
# `!v system('date-jiv | tr -d "\n"')` ${VISUAL}$0
endsnippet

# ||
# || Comments
# ||

snippet # "Section" b
# ||
# || ${0:${VISUAL}}
# ||
endsnippet

snippet T "TODO" w
# TODO $0
endsnippet

# ||
# || Basement
# ||

# If line above is empty, basement:
snippet /^$/ "basement-implicit" "re.match('^$', snip.buffer[snip.line-1])" re
\`\`\` `!v system('date-jiv | tr -d "\n"')`
${VISUAL}${0:`!p

if not snip.v.text:
	snip.rv = ""
`}
\`\`\`
endsnippet

# ||
# || Priority
# ||

snippet /\b(prio|p)/ "priority -1" wr
priority -1

${VISUAL}$0

priority 0
endsnippet

# ||
# || Snippets
# ||

# We use a little hack so that the snippet is expanded
# and parsed correctly
snippet /snip|f/ "Snippet definition" !rb
`!p snip.rv = "snippet"` ${1:Tab_trigger} "${2:$1}" ${3:w}
${0:$2}
`!p snip.rv = "endsnippet"`
endsnippet

snippet snib "snib" b
`!p snip.rv = "snippet"` ${1:Tab_trigger} "${2:$1}" b
${4:$2}
`!p snip.rv = "endsnippet"`
endsnippet

snippet ls "Lisp snippet" b
`!p snip.rv = "snippet"` "(\()?\b${1:trigger}" "${2:$1}" rw
($2 \${VISUAL}\$0$0\`!p
if match.group(1) is None:
	snip.rv = ")"\`
`!p snip.rv = "endsnippet"`
endsnippet

snippet snipi "Snippet definition" !
`!p snip.rv = "snippet"` /(\s+)${1:Tab_trigger}/ "${2:$1}" ${3:ir}
\`!p if match.group(1) is not None:
    snip.rv = match.group(1)\`$1$0
`!p snip.rv = "endsnippet"`
endsnippet

snippet vis "visual" i
\${VISUAL}
endsnippet

snippet $0 "$0" w
\${0:\${VISUAL}}
endsnippet

# ||
# || Python
# ||

snippet /^(global|glob|g)/ "Global snippet" !r
`!p snip.rv = "global"` !p
$0
`!p snip.rv = "endglobal"`
endsnippet

#snippet vis "${VISUAL}" i
#\$\{VISUAL${1:${2:default}${3:/transform/}}\}
#endsnippet

snippet match "match" i
\`!p
if match.group(${1:0}) is not None:
    snip.rv = match.group($1)\`$0
endsnippet

snippet ` "python block" i
\`!p snip.rv = $1\`
endsnippet

snippet r "return" b
return $0
endsnippet

# ||
# || Fallbacks
# ||

priority -3

# ||
# || Arity fallbacks
# ||

snippet /([\!:\w=-]+);/  "arity-2" wr
`!p
if match.group(1) is not None:
	snip.rv = match.group(1)`(${1:X}, ${0:Y})
endsnippet

snippet /([\!:\w=-]+);;/  "arity-3" wr
`!p
if match.group(1) is not None:
	snip.rv = match.group(1)`(${1:X}, ${2:Y}, ${0:Z})
endsnippet

snippet /([\!:\w=-]+);;;/  "arity-4" wr
`!p
if match.group(1) is not None:
	snip.rv = match.group(1)`(${1:X}, ${2:Y}, ${3:Z}, ${4:L})
endsnippet

priority -4

snippet  /([\!:\w=-]+)/ "expand-any-word" rw
`!p
if match.group(0) is not None:
	snip.rv = match.group(0)`(${0:X})
endsnippet
