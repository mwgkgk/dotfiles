###########################################################################
#                          SNIPPETS for MARKDOWN                          #
###########################################################################
extends local.markdown
extends local.words.markdown

##############
# José Valim #
##############
snippet jose "jose" i
José Valim
endsnippet
snippet jv "jv" i
-- José Valim
endsnippet

###########################
# Sections and Paragraphs #
###########################
snippet sec "Section" b
# ${1:Section Name} #
$0
endsnippet

snippet ssec "Sub Section" b
## ${1:Section Name} ##
$0
endsnippet

snippet sssec "SubSub Section" b
### ${1:Section Name} ###
$0
endsnippet

snippet par "Paragraph" b
#### ${1:Paragraph Name} ####
$0
endsnippet

snippet spar "Paragraph" b
##### ${1:Paragraph Name} #####
$0
endsnippet

################
# Common stuff #
################
snippet link "Link to something"
[${1:${VISUAL:Text}}](${3:http://${2:www.url.com}})$0
endsnippet

snippet img "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

##################
#  Custom stuff  #
##################

snippet d "d" i
`!v system('date +"%Y-%m-%d" | tr -d "\n"')`: ${0}
endsnippet

snippet / *da(te)?/ "Date" rb
# `!v system("date")`${0}
endsnippet

snippet / *yest/ "Yesterday" rb
# `!v system('date -d yesterday +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet / *tod/ "Today" rb
# `!v system('date +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet / *tom/ "Tomorrow" rb
# `!v system('date -d tomorrow +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet " *(sun|mon|tue|wed|thu|fri|sat)" "Weekday" rb
`!p
if match.group(0) is not None:
	call_str = "date -d '" + match.group(0) + "' +'%a, %b %d' | tr -d '\n'"
	import subprocess
	snip.rv = "# " + subprocess.check_output(call_str, shell=True).decode('ascii')`${0}
endsnippet

snippet " *next (sun|mon|tue|wed|thu|fri|sat)" "next Weekday" rb
`!p
if match.group(0) is not None:
	call_str = "date -d '" + match.group(0) + "' +'%a, %b %d' | tr -d '\n'"
	import subprocess
	snip.rv = "# " + subprocess.check_output(call_str, shell=True).decode('ascii')`${0}
endsnippet

snippet / *3days/ "in 3 days" rb
# `!v system('date -d "+3 days" +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet / *2days/ "in 2 days" rb
# `!v system('date -d "+2 days" +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet / *10days/ "in 2 days" rb
# `!v system('date -d "+10 days" +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet /# \w\w\w, \w\w\w \d\d/ "date continued: today" rb
`!p
if match.group(0) is not None:
    snip.rv = match.group(0)`: Today >
endsnippet

snippet /Today >/ "tomorrow" r
Tomorrow >
endsnippet

snippet /Tomorrow >/ "today" r
Today >
endsnippet

snippet /(# \w\w\w, \w\w\w \d\d) tom/ "date continued: tomorrow" rb
`!p
if match.group(1) is not None:
    snip.rv = match.group(1)`: Tomorrow
endsnippet

snippet l "lessons" b
Lessons:
	- $0
endsnippet

priority -1

snippet /\$?([0-9,]+)/ "Numbers" r
$`!p
if match.group(0) is not None:
	temp = "{:,}".format(int(match.group(1).replace(",", "")))
	if (temp == match.group(1)):
		snip.rv = temp + ",000"
	else:
		snip.rv = temp`
endsnippet
# vim:ft=snippets:
