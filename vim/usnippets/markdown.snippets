###########################################################################
#                          SNIPPETS for MARKDOWN                          #
###########################################################################
extends local.markdown

###########################
# Sections and Paragraphs #
###########################
snippet sec "Section" b
# ${1:Section Name} #
$0
endsnippet

snippet ssec "Sub Section" b
## ${1:Section Name} ##
$0
endsnippet

snippet sssec "SubSub Section" b
### ${1:Section Name} ###
$0
endsnippet

snippet par "Paragraph" b
#### ${1:Paragraph Name} ####
$0
endsnippet

snippet spar "Paragraph" b
##### ${1:Paragraph Name} #####
$0
endsnippet

################
# Common stuff #
################
snippet link "Link to something"
[${1:${VISUAL:Text}}](${3:http://${2:www.url.com}})$0
endsnippet

snippet img "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

##################
#  Custom stuff  #
##################

snippet / *da(te)?/ "Date" rb
# `!v system("date")`${0}
endsnippet

snippet / *tod/ "Today" rb
# `!v system('date +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet / *tom/ "Tomorrow" rb
# `!v system('date -d tomorrow +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet " *(sun|mon|tue|wed|thu|fri|sat)" "Weekday" rb
`!p
if match.group(0) is not None:
	call_str = "date -d '" + match.group(0) + "' +'%a, %b %d' | tr -d '\n'"
	import subprocess
	snip.rv = "# " + subprocess.check_output(call_str, shell=True).decode('ascii')`${0}
endsnippet

snippet " *next (sun|mon|tue|wed|thu|fri|sat)" "next Weekday" rb
`!p
if match.group(0) is not None:
	call_str = "date -d '" + match.group(0) + "' +'%a, %b %d' | tr -d '\n'"
	import subprocess
	snip.rv = "# " + subprocess.check_output(call_str, shell=True).decode('ascii')`${0}
endsnippet

snippet / *3days/ "in 3 days" rb
# `!v system('date -d "+3 days" +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet / *2days/ "in 2 days" rb
# `!v system('date -d "+2 days" +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet / *10days/ "in 2 days" rb
# `!v system('date -d "+10 days" +"%a, %b %d" | tr -d "\n"')`${0}
endsnippet

snippet /# \w\w\w, \w\w\w \d\d/ "date continued: today" rb
`!p
if match.group(0) is not None:
    snip.rv = match.group(0)`: Today >
endsnippet

snippet /Today >/ "tomorrow" r
Tomorrow >
endsnippet

snippet /Tomorrow >/ "today" r
Today >
endsnippet

snippet /(# \w\w\w, \w\w\w \d\d) tom/ "date continued: tomorrow" rb
`!p
if match.group(1) is not None:
    snip.rv = match.group(1)`: Tomorrow
endsnippet

snippet ms "makes sense" i
makes sense
endsnippet

snippet Ms "makes sense" i
Makes sense.
endsnippet

snippet mas "makes a lot of sense" i
makes a lot of sense
endsnippet

snippet Mas "makes a lot of sense" i
Makes a lot of sense.
endsnippet

snippet fe "Description" b
fair enough
endsnippet

snippet gb "Description" b
god bless
endsnippet

snippet S "S" i
S${1:0} M${2:0} E${3:0} P${4:0} I${5:0} D${6:0}
endsnippet

snippet / *day/ "day" br
# `!v system("date")`${0} ${VISUAL}
>.06:00 News
  06:10
  06:20
  06:30
  06:40
  06:50

>.07:00 Breakfast
  07:10
  07:20
  07:30
  07:40
  07:50

>.08:00 Clojure Morning
  08:10
  08:20
  08:30
  08:40
  08:50

 .09:00 
  09:10
  09:20
  09:30
  09:40
  09:50

 .10:00
  10:10
  10:20
  10:30
  10:40
  10:50

 .11:00
  11:10
  11:20
  11:30
  11:40
  11:50

 .12:00 
  12:10
  12:20
  12:30
  12:40
  12:50

>.13:00 Обед
  13:10
> 13:20 Research
  13:30
  13:40
  13:50

>.14:00 Phoenix / Elm Japanese Afternoon : We So Ready Baby
  14:10
  14:20
  14:30
  14:40
  14:50

 .15:00
  15:10
  15:20
  15:30
  15:40
  15:50

 .16:00
  16:10
  16:20
  16:30
  16:40
  16:50

 .17:00
  17:10
  17:20
  17:30
  17:40
  17:50

>.18:00 News
  18:10
  18:20
  18:30
  18:40
  18:50

>.19:00 PSim
  19:10
  19:20
  19:30
  19:40
  19:50

 .20:00
  20:10
  20:20
  20:30
  20:40
  20:50

>.21:00+ Inbox / Boosts / Analysis
endsnippet

priority -1

snippet /\$?([0-9,]+)/ "Numbers" r
$`!p
if match.group(0) is not None:
	temp = "{:,}".format(int(match.group(1).replace(",", "")))
	if (temp == match.group(1)):
		snip.rv = temp + ",000"
	else:
		snip.rv = temp`
endsnippet
# vim:ft=snippets:
