extends javascript
extends css

global !p
def x(snip):
    if snip.ft.startswith("x"):
        snip.rv = '/'
    else:
        snip.rv = ""
endglobal

############
# Doctypes #
############
snippet doctype "DocType XHTML 1.0 Strict" b
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

endsnippet

snippet doctype "DocType XHTML 1.0 Transitional" b
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

endsnippet

snippet doctype "DocType XHTML 1.1" b
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
	"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

endsnippet

snippet doctype "HTML - 4.0 Transitional (doctype)" b
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">

endsnippet

snippet doctype "HTML - 5.0 (doctype)" b
<!DOCTYPE html>

endsnippet

#############
# Shortcuts #
#############
snippet nb "Nbsp" !i
&nbsp;
endsnippet

snippet down "Down (down)"
&#x2193;
endsnippet

snippet enter "Enter (enter)"
&#x2305;
endsnippet

snippet escape "Escape (escape)"
&#x238B;
endsnippet

snippet shift "Shift (shift)"
&#x21E7;
endsnippet

snippet tab "Tab (tab)"
&#x21E5;
endsnippet

snippet up "Up (up)"
&#x2191;
endsnippet

snippet return "Return (return)"
&#x21A9;
endsnippet

snippet right "Right (right)"
&#x2192;
endsnippet

snippet left "Left (left)"
&#x2190;
endsnippet

snippet option "Option (option)"
&#x2325;
endsnippet

#######################
# Conditional inserts #
#######################
snippet ! "IE Conditional Comment: Internet Explorer 5_0 only"
<!--[if IE 5.0]>${1:IE Conditional Comment: Internet Explorer 5.0 only }<![endif]-->$0
endsnippet

snippet ! "IE Conditional Comment: Internet Explorer 5_5 only"
<!--[if IE 5.5000]>${1:IE Conditional Comment: Internet Explorer 5.5 only }<![endif]-->$0
endsnippet

snippet ! "IE Conditional Comment: Internet Explorer 5_x"
<!--[if lt IE 6]>${1:IE Conditional Comment: Internet Explorer 5.x      }<![endif]-->$0
endsnippet

snippet ! "IE Conditional Comment: Internet Explorer 6 and below"
<!--[if lte IE 6]>${1:IE Conditional Comment: Internet Explorer 6 and below }<![endif]-->$0
endsnippet

snippet ! "IE Conditional Comment: Internet Explorer 6 only"
<!--[if IE 6]>${1:IE Conditional Comment: Internet Explorer 6 only   }<![endif]-->$0
endsnippet

snippet ! "IE Conditional Comment: Internet Explorer 7+"
<!--[if gte IE 7]>${1:IE Conditional Comment: Internet Explorer 7 and above }<![endif]-->$0
endsnippet

snippet ! "IE Conditional Comment: Internet Explorer"
<!--[if IE]>${1:       IE Conditional Comment: Internet Explorer          }<![endif]-->$0
endsnippet

snippet ! "IE Conditional Comment: NOT Internet Explorer"
<!--[if !IE]><!-->${1:  IE Conditional Comment: NOT Internet Explorer      }<!-- <![endif]-->$0
endsnippet

#############
# HTML TAGS #
#############
snippet input "Input with Label"
<label for="${2:${1/[[:alpha:]]+|( )/(?1:_:\L$0)/g}}">$1</label><input type="${3:text/submit/hidden/button}" name="${4:$2}" value="$5"${6: id="${7:$2}"}`!p x(snip)`>

endsnippet

snippet input "XHTML   <input>"
<input type="${1:text/submit/hidden/button}" name="${2:some_name}" value="$3"${4: id="${5:$2}"}`!p x(snip)`>
endsnippet

snippet input "simple input" !i
<input id="${2:id_$1}" name="${1}" value="${3}" type="${4:text}"`!p x(snip)`>
endsnippet

snippet inputl "input with lbl" !i
<label for="$3">$1</label><input id="${3:id_$2}" name="${2}" value="${4}" type="${5:text}"`!p x(snip)`>
endsnippet

snippet cbox "input checkbox with label" !i
<label><input type="checkbox" {% if ${1} %}checked="checked"{% endif %} name="${2}" value="${3}"${4}>${5}</label>
endsnippet

snippet hidden "hidden input" !b
<input type="hidden" value="$1">
endsnippet

snippet opt "Option"
<option${1: value="${2:option}"}>${3:$2}</option>
endsnippet

snippet select "Select Box"
<select name="${1:some_name}" id="${2:$1}"${3:${4: multiple}${5: onchange="${6:}"}${7: size="${8:1}"}}>
	<option${9: value="${10:option1}"}>${11:$10}</option>
	<option${12: value="${13:option2}"}>${14:$13}</option>${15:}
	$0
</select>
endsnippet

snippet select "Select Box - simple" !
<select id="${2:id_$1}" name="${1:some_name}">
	$3
</select>
endsnippet

snippet textarea "XHTML   <textarea>"
<textarea name="${1:Name}" rows="${2:8}" cols="${3:40}">$0</textarea>
endsnippet

snippet mailto "XHTML <a mailto: >"
<a href="mailto:${1:joe@example.com}?subject=${2:feedback}">${3:email me}</a>
endsnippet

snippet base "XHTML <base>"
<base href="$1"${2: target="$3"}`!p x(snip)`>
endsnippet

snippet body "XHTML <body>"
<body id="${1:`!p
snip.rv = snip.fn and 'Hallo' or 'Nothin'
`}"${2: onload="$3"}>
	$0
</body>
endsnippet

# snippet div "XHTML <div>"
# <div`!p snip.rv=' id="' if t[1] else ""`${1:name}`!p snip.rv = '"' if t[1] else ""``!p snip.rv=' class="' if t[2] else ""`${2:name}`!p snip.rv = '"' if t[2] else ""`>
#    $0
# </div>
# endsnippet

snippet form "XHTML <form>"
<form action="${1:`!p
snip.rv = (snip.basename or 'unnamed') + '_submit'
`}" method="${2:get}" accept-charset="utf-8">
	$0

	<p><input type="submit" value="Continue â†’"`!p x(snip)`></p>
</form>
endsnippet

snippet h1 "XHTML <h1>"
<h1${2: id="${1/[\w\d]+|( )/(?1:_:\L$0\E)/g}"}>${1}</h1>
endsnippet

snippet h3 "XHTML <h3>"
<h3${2: id="${1/[\w\d]+|( )/(?1:_:\L$0\E)/g}"}>${1}</h3>
endsnippet

snippet head "XHTML <head>"
<head>
	<meta http-equiv="Content-type" content="text/html; charset=utf-8"`!p x(snip)`>
	<title>${1:`!p snip.rv = snip.basename or "Page Title"`}</title>
	$0
</head>
endsnippet

snippet link "XHTML <link>"
<link rel="${1:stylesheet}" href="${2:/css/master.css}" type="text/css" media="${3:screen}" title="${4:no title}" charset="${5:utf-8}"`!p x(snip)`>
endsnippet

snippet meta "XHTML <meta>"
<meta name="${1:name}" content="${2:content}"`!p x(snip)`>
endsnippet

snippet scriptsrc "HTML5 <script src...>"
<script src="$1"></script>
endsnippet

# snippet script "XHTML <script>"
# <script type="text/javascript" charset="utf-8">
# 	$0
# </script>
# endsnippet

snippet script "html5 script" !b
<script>
	${VISUAL}$0
</script>
endsnippet

snippet style "XHTML <style>"
<style type="text/css" media="screen">
	${VISUAL}$0
</style>
endsnippet

snippet style "html5 <style>" !
<style>
	${VISUAL}$0
</style>
endsnippet

snippet table "XHTML <table>"
<table border="${1:0}"${2: cellspacing="${3:5}" cellpadding="${4:5}"}>
	<tr><th>${5:Header}</th></tr>
	<tr><td>${0:Data}</td></tr>
</table>
endsnippet

snippet href "Link" i
<a href="${1}"${2}>${VISUAL}${3}</a>
endsnippet

snippet p "paragraph"
<p${1}>${VISUAL}${2}</p>
endsnippet

snippet li "list item"
<li${1}>${VISUAL}${2}</li>
endsnippet

snippet ul "unordered list"
<ul>
	${VISUAL}$1
</ul>
endsnippet

snippet td "table cell"
<td>
	${VISUAL}$1
</td>
endsnippet

snippet tr "table row"
<tr>
	${VISUAL}$1
</tr>
endsnippet

snippet th "table head"
<th>
	${VISUAL}$1
</th>
endsnippet

snippet title "XHTML <title>"
<title>${1:`!p snip.rv = snip.basename or "Page Title"`}</title>
endsnippet

snippet fieldset "Fieldset"
<fieldset id="${1/[\w\d]+|( )/(?1:_:\L$0\E)/g}" ${2:class="${3:}"}>
	<legend>$1</legend>
	
	$0
</fieldset>
endsnippet

snippet movie "Embed QT movie (movie)" b
<object width="$2" height="$3" classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B" codebase="http://www.apple.com/qtactivex/qtplugin.cab">
	<param name="src" value="$1"`!p x(snip)`>
	<param name="controller" value="$4"`!p x(snip)`>
	<param name="autoplay" value="$5"`!p x(snip)`>
	<embed src="${1:movie.mov}"
		width="${2:320}" height="${3:240}"
		controller="${4:true}" autoplay="${5:true}"
		scale="tofit" cache="true"
		pluginspage="http://www.apple.com/quicktime/download/"
	`!p x(snip)`>
</object>
endsnippet

snippet html5 "HTML5 Template"
<!DOCTYPE html>
<html>
<head>
    <title>${1}</title>
    <meta charset="utf-8" />
</head>
<body>
    <header>
        ${2}
    </header>
    <footer>
        ${4}
    </footer>
</body>
</html>
endsnippet

snippet "([\w\s]+)?cl" "HTML Class" irs
`!p
if match.group(1) is not None:
	snip.rv = match.group(1).rstrip() + ' '
else:
	snip.rv = ' '`class="${1}${VISUAL}" $0
endsnippet

snippet "([\w\s]+)?id" "HTML Id" irs
`!p
if match.group(1) is not None:
	snip.rv = match.group(1).rstrip() + ' '
else:
	snip.rv = ' '`id="${1}${VISUAL}" $0
endsnippet

snippet "([\w\s]+)?st" "HTML Style" irs
`!p
if match.group(1) is not None:
	snip.rv = match.group(1).rstrip() + ' '
else:
	snip.rv = ' '`style="${1}${VISUAL}" $0
endsnippet

snippet div "Inline <div>" i
<div${1}>${VISUAL}${2}</div>
endsnippet

snippet span "Inline <span>" i
<span${1}>${VISUAL}${2}</span>
endsnippet

snippet <div "Div: continued" b
<div class="$1"$0
endsnippet

snippet btn "Simple <button>" !i
<button id="${1}" class="btn" type="button">${VISUAL}${2}</button>
endsnippet

snippet label "Label" !i
<label for="${1}"${2}>${VISUAL}${3}</label>
endsnippet

snippet scr "Simple script src" !
<script src="${1}"></script>
endsnippet

snippet cfix "Clearfix" !b
<div class="clearfix"></div>
endsnippet

snippet img "Description" b
<img src="${1}" />
endsnippet

snippet tit "title" !i
title="$1"$0
endsnippet

snippet dialog "Description" !b
<div id="$1" title="$2">
	<p>
		<span class="ui-icon ui-icon-triangle-1-e" style="float:left; margin:0 7px 50px 0;"></span>
		$3
	</p>
</div>
endsnippet

snippet com "Description" !
<!-- $0 -->
endsnippet

priority 1

snippet div "Div: beginning" b
<div${1}>
	${VISUAL}${2}
</div>
endsnippet

# vim:ft=snippets:
