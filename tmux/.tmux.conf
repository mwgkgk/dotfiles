# Prefix
set-option -g prefix C-space

# Escape
set -s escape-time 0

# Colors
set -g default-terminal "screen-256color"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

set -g mode-keys vi

# Use v to trigger selection    
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -bi"

bind-key y copy-mode \; send-keys -X copy-line

# tabs
# bind C-P next
# bind p prev

# swap-window
bind p swap-window -t +1
bind C-p  swap-window -t -1

# Renumber automatically
set-option -g renumber-windows on

# ctrl-q
unbind -n C-q

# Urxvt meta8 fixes:
# bind-key -n â send-keys M-b
# bind-key -n æ send-keys M-f
# bind-key -n ã send-keys M-c
# bind-key -n ø send-keys M-x
# bind-key -n ù send-keys M-y
# bind-key -n ä send-keys M-d
# bind-key -n å send-keys M-e
# bind-key -n è send-keys M-h
# bind-key -n ì send-keys M-l
# bind-key -n ë send-keys M-k
# bind-key -n ê send-keys M-j
# bind-key -n ÷ send-keys M-w
bind-key -n ï send-keys M-o
bind-key -n é send-keys M-i
# bind-key -n ö send-keys M-v

# bind-key -n ± send-keys M-1
# bind-key -n ² send-keys M-2
# bind-key -n ³ send-keys M-3
# bind-key -n ´ send-keys M-4
# bind-key -n µ send-keys M-5
# bind-key -n ¶ send-keys M-6
# bind-key -n · send-keys M-7
# bind-key -n ¸ send-keys M-8
# bind-key -n ¹ send-keys M-9

bind-key -n M-1 if-shell 'tmux select-window -t:1' '' 'new-window -t :1'
bind-key -n M-2 if-shell 'tmux select-window -t:2' '' 'new-window -t :2'
bind-key -n M-3 if-shell 'tmux select-window -t:3' '' 'new-window -t :3'
bind-key -n M-4 if-shell 'tmux select-window -t:4' '' 'new-window -t :4'
bind-key -n M-5 if-shell 'tmux select-window -t:5' '' 'new-window -t :5'
bind-key -n M-6 if-shell 'tmux select-window -t:6' '' 'new-window -t :6'
bind-key -n M-7 if-shell 'tmux select-window -t:7' '' 'new-window -t :7'
bind-key -n M-8 if-shell 'tmux select-window -t:8' '' 'new-window -t :8'
bind-key -n M-9 if-shell 'tmux select-window -t:9' '' 'new-window -t :9'

bind-key -n ± if-shell 'tmux select-window -t:1' '' 'new-window -t :1'
bind-key -n ² if-shell 'tmux select-window -t:2' '' 'new-window -t :2'
bind-key -n ³ if-shell 'tmux select-window -t:3' '' 'new-window -t :3'
bind-key -n ´ if-shell 'tmux select-window -t:4' '' 'new-window -t :4'
bind-key -n µ if-shell 'tmux select-window -t:5' '' 'new-window -t :5'
bind-key -n ¶ if-shell 'tmux select-window -t:6' '' 'new-window -t :6'
bind-key -n · if-shell 'tmux select-window -t:7' '' 'new-window -t :7'
bind-key -n ¸ if-shell 'tmux select-window -t:8' '' 'new-window -t :8'
bind-key -n ¹ if-shell 'tmux select-window -t:9' '' 'new-window -t :9'

# Last window
bind-key C-space last-window

# Last pane
bind-key space last-pane

# movement
bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

# resize
bind -r H resize-pane -L
bind -r J resize-pane -D
bind -r K resize-pane -U
bind -r L resize-pane -R

# move & zoom
bind -r C-k select-pane -U \; resize-pane -Z
bind -r C-j select-pane -D \; resize-pane -Z
bind -r C-h select-pane -L \; resize-pane -Z
bind -r C-l select-pane -R \; resize-pane -Z

# mouse
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
set -g mouse on

# status
set-option -g status-bg colour236
set-option -g status-fg white
# set-option -g status-left ':#P'
set-option -g status-left ' '
set-option -g status-justify left
set-option -g status-position top
set-option -g status-right " #{=21:pane_title} "
set-option -g status-right-style "fg=colour242"

# Current tab
set-window-option -g window-status-current-fg colour223
set-window-option -g window-status-fg colour243

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"

# respawn shell
bind-key R respawn-pane -k -c "#{pane_current_path}" 

# toggle synchronize-panes
bind a set-window-option synchronize-panes

# active pane
set-option -g pane-active-border-fg colour239
set-option -g pane-border-fg colour236

bind-key c new-window -c "#{pane_current_path}"
bind-key f new-window -n "#{pane_current_path}" -c "#{pane_current_path}" fm .

bind-key V split-window -h -c "#{pane_current_path}" -p 75
bind-key N split-window -h -c "#{pane_current_path}" -p 25

bind-key v split-window -v -c "#{pane_current_path}" -p 75
bind-key n split-window -v -c "#{pane_current_path}" -p 24

bind-key B split-window -h -c "#{pane_current_path}" -p 50
bind-key b split-window -v -c "#{pane_current_path}" -p 50

bind-key T split-window -hb -c "#{pane_current_path}" -p 24
bind-key t split-window -vb -c "#{pane_current_path}" -p 12

# search buffer (using less if Vim is not available)
bind-key / capture-pane -S -32767 -J \; new-window ' \
  tmux save-buffer - \; delete-buffer | {                 \
    vim -R -c "set nofen is hls ic" -;                    \
    test $? -eq 127 && less;                              \
  };                                                      \
' \;

set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-copy-command 'xsel -i'

run '~/.tmux/plugins/tpm/tpm'
