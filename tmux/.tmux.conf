# Prefix
set-option -g prefix C-space

# Escape
set -s escape-time 0

# Colors
set -g default-terminal "screen-256color"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

set -g display-panes-time 2000

set -g mode-keys vi

# Aliases
set -s command-alias[1] yeet='move-window -t '

# Use v to trigger selection    
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i"

bind-key y copy-mode \; send-keys -X copy-line

# tabs
# bind C-P next
# bind p prev

# swap-window
bind p swap-window -t +1 -d
bind C-p  swap-window -t -1 -d

# Renumber automatically
set-option -g renumber-windows on

# Add to update-environment:
set-option -ga update-environment ' CHI'

# ctrl-q
unbind -n C-q

# Unbind switch-client -p / -n
unbind (
unbind )

# Urxvt meta8 fixes:
# bind-key -n â send-keys M-b
# bind-key -n æ send-keys M-f
# bind-key -n ã send-keys M-c
# bind-key -n ø send-keys M-x
# bind-key -n ù send-keys M-y
# bind-key -n ä send-keys M-d
# bind-key -n å send-keys M-e
# bind-key -n è send-keys M-h
# bind-key -n ì send-keys M-l
# bind-key -n ë send-keys M-k
# bind-key -n ê send-keys M-j
# bind-key -n ÷ send-keys M-w
# bind-key -n ï send-keys M-o
# bind-key -n é send-keys M-i
# bind-key -n ö send-keys M-v
# bind-key -n ó send-keys M-s
# bind-key -n ç send-keys M-g
# bind-key -n ñ send-keys M-q

# bind-key -n ± send-keys M-1
# bind-key -n ² send-keys M-2
# bind-key -n ³ send-keys M-3
# bind-key -n ´ send-keys M-4
# bind-key -n µ send-keys M-5
# bind-key -n ¶ send-keys M-6
# bind-key -n · send-keys M-7
# bind-key -n ¸ send-keys M-8
# bind-key -n ¹ send-keys M-9

# If-shell no longer works so we put that in a shell script
bind-key -n M-1 run-shell 'tmux-select-window-or-new 1'
bind-key -n M-2 run-shell 'tmux-select-window-or-new 2'
bind-key -n M-3 run-shell 'tmux-select-window-or-new 3'
bind-key -n M-4 run-shell 'tmux-select-window-or-new 4'
bind-key -n M-5 run-shell 'tmux-select-window-or-new 5'
bind-key -n M-6 run-shell 'tmux-select-window-or-new 6'
bind-key -n M-7 run-shell 'tmux-select-window-or-new 7'
bind-key -n M-8 run-shell 'tmux-select-window-or-new 8'
bind-key -n M-9 run-shell 'tmux-select-window-or-new 9'

bind-key -n ± run-shell 'tmux-select-window-or-new 1'
bind-key -n ² run-shell 'tmux-select-window-or-new 2'
bind-key -n ³ run-shell 'tmux-select-window-or-new 3'
bind-key -n ´ run-shell 'tmux-select-window-or-new 4'
bind-key -n µ run-shell 'tmux-select-window-or-new 5'
bind-key -n ¶ run-shell 'tmux-select-window-or-new 6'
bind-key -n · run-shell 'tmux-select-window-or-new 7'
bind-key -n ¸ run-shell 'tmux-select-window-or-new 8'
bind-key -n ¹ run-shell 'tmux-select-window-or-new 9'


# Last window
bind-key C-space last-window

# Last pane
bind-key space last-pane

# movement
bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

bind-key C-k select-pane -U
bind-key C-j select-pane -D
bind-key C-h select-pane -L
bind-key C-l select-pane -R

# resize
bind -r H resize-pane -L
bind -r J resize-pane -D
bind -r K resize-pane -U
bind -r L resize-pane -R

# mouse
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
set -g mouse on

# status
# set-option -g status-left ':#P'
set-option -g status-left ' '
set-option -g status-justify left
set-option -g status-position top
set-option -g status-right " #(tmux show-environment CHI | cut -c 5-) #{=21:pane_title} "
set-option -g status-interval 0

# Hawk / Lab:
# Status
# set-option -g status-fg white
# set-option -g status-bg colour234
# set-option -g status-right-style fg=colour66
# Current tab
# set-window-option -g window-status-current-style fg=colour151
# set-window-option -g window-status-style fg=colour66
# Message style: e.g. rename input window
# set-window-option -g message-style bg=colour151,fg=colour234

# Science:
# Status
# set-option -g status-bg colour223
# set-option -g status-fg colour232
# set-option -g status-right-style fg=colour232
# # Inactive tabs
# set-window-option -g window-status-style fg=colour239
# # Current tab
# set-window-option -g window-status-current-style fg=colour232,nobold
# # Message style: e.g. rename input window
# set-window-option -g message-style bg=colour223,fg=colour232

# Thief/JP:
# Status
# set-option -g status-fg white
# set-option -g status-bg colour234
# set-option -g status-right-style fg=colour96
# Current tab
# set-window-option -g window-status-current-style fg=colour178
# set-window-option -g window-status-style fg=colour96
# Message style: e.g. rename input window
# set-window-option -g message-style bg=colour234,fg=colour178

# Freefall:
# Status
# set-option -g status-fg white
# set-option -g status-bg colour234
# set-option -g status-right-style fg=colour245
# Current tab
# set-window-option -g window-status-current-style fg=colour254
# set-window-option -g window-status-style fg=colour245
# Message style: e.g. rename input window
# set-window-option -g message-style bg=colour234,fg=colour254

# Net-yellow:
# Status
set-option -g status-fg white
set-option -g status-bg colour234
set-option -g status-right-style fg=colour94
# Current tab
set-window-option -g window-status-current-style fg=colour172
set-window-option -g window-status-style fg=colour94
# Message style: e.g. rename input window
set-window-option -g message-style bg=colour234,fg=colour172

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"

# respawn shell
bind-key R respawn-pane -k -c "#{pane_current_path}" 

# Pane sizes:
# bind-key P \; display-message "#{pane_width}x#{pane_height}"

# toggle synchronize-panes
bind a set-window-option synchronize-panes

# active pane
set-option -g pane-active-border-style fg=colour239
set-option -g pane-border-style fg=colour236

# TODO move right after with -a
bind-key C new-window -c "#{pane_current_path}" -a
bind-key f new-window -n "#{pane_current_path}" -c "#{pane_current_path}" fm .

bind-key V split-window -h -c "#{pane_current_path}" -p 75
bind-key N split-window -h -c "#{pane_current_path}" -p 25

bind-key v split-window -v -c "#{pane_current_path}" -p 75
bind-key n split-window -v -c "#{pane_current_path}" -p 24

bind-key B split-window -h -c "#{pane_current_path}" -p 50
bind-key b split-window -v -c "#{pane_current_path}" -p 50

bind-key T split-window -hb -c "#{pane_current_path}" -p 24
bind-key t split-window -vb -c "#{pane_current_path}" -p 12

# Open Vim session:
bind-key c new-window -n "#{history_bytes}" -a "v"

set -g @plugin 'tmux-plugins/tmux-open'

# run '~/.tmux/plugins/tpm/tpm'
