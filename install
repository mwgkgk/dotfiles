#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

DOTFILES="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

relevant=0
relinked=0
notfound=0
skipped=0
planted=0

verbose_link() {
    if ! test -e "$1"; then
        echo "$(tput setaf 202)Source not found:$(tput sgr0) "$1""

        read -r -p "Continue? (default=yes): " do_continue
        test -z "$do_continue" && do_continue="yes"

        if test "$do_continue" != "yes"; then
            exit 1
        else
            notfound=$((notfound + 1))
        fi
    elif test -h "$2"; then
        if test "$2" -ef "$1"; then
            relevant=$((relevant + 1))
        else
            echo "$(tput setaf 202)Relink$(tput sgr0)" \
                "$(readlink -f "$2")" \
                "$(tput setaf 76)>$(tput sgr0) "$1"" >&2
            unlink "$2"
            ln -s "$1" "$2" && relinked=$((relinked + 1))
        fi
    elif test -f "$2" || test -d "$2"; then
        echo "$(tput setaf 202)Exists$(tput sgr0) "$2"" >&2
        skipped=$((skipped + 1))
    elif ! test -e "$2"; then
        ln -s "$1" "$2" \
            && echo "$(tput setaf 76)Plant $(tput sgr0) "$2"" \
            && planted=$((planted + 1))
    fi
}

# Kmonad
verbose_link "$DOTFILES/kmonad/" ~/.config/kmonad

# Readline
verbose_link "$DOTFILES/readline/.inputrc" ~/.inputrc

# Bash
verbose_link "$DOTFILES/bash/.bashrc" ~/.bashrc
verbose_link "$DOTFILES/bash/.bash_profile" ~/.bash_profile
verbose_link "$DOTFILES/bash/.bash_aliases" ~/.bash_aliases

# Zsh
verbose_link "$DOTFILES/zsh/.zshrc" ~/.zshrc

# Fish
mkdir -p ~/.config/fish
verbose_link "$DOTFILES/fish/config.fish" ~/.config/fish/config.fish
verbose_link "$DOTFILES/fish/fish_plugins" ~/.config/fish/fish_plugins

# Tmux
verbose_link "$DOTFILES/tmux/.tmux.conf" ~/.tmux.conf

# Vim
verbose_link "$DOTFILES/vim/" ~/.vim
mkdir -p ~/.vim/undo

# Vifm
mkdir -p ~/.vifm
verbose_link "$DOTFILES/vifm/vifmrc" ~/.vifm/vifmrc
verbose_link "$DOTFILES/vifm/colors/" ~/.vifm/colors

# Git
verbose_link "$DOTFILES/git/.gitconfig" ~/.gitconfig

# Ctags
verbose_link "$DOTFILES/ctags/.ctags" ~/.ctags
mkdir -p ~/.ctags.d
verbose_link "$DOTFILES/ctags/.ctags" ~/.ctags.d/default.ctags

# Autoformat
verbose_link "$DOTFILES/fmt/.rustfmt.toml" ~/.rustfmt.toml

# Repl
verbose_link "$DOTFILES/repl/.sbclrc" ~/.sbclrc
verbose_link "$DOTFILES/repl/ccl-init.lisp" ~/ccl-init.lisp
verbose_link "$DOTFILES/repl/.clisprc.lisp" ~/.clisprc.lisp
verbose_link "$DOTFILES/repl/.eclrc" ~/.eclrc
verbose_link "$DOTFILES/repl/.abclrc" ~/.abclrc
verbose_link "$DOTFILES/repl/.clasprc" ~/.clasprc
verbose_link "$DOTFILES/repl/.clinit.cl" ~/.clinit.cl
mkdir -p ~/.lein
verbose_link "$DOTFILES/repl/profiles.clj" ~/.lein/profiles.clj
verbose_link "$DOTFILES/repl/.iex.exs" ~/.iex.exs
verbose_link "$DOTFILES/repl/.lambda-term-inputrc" ~/.lambda-term-inputrc
verbose_link "$DOTFILES/repl/.minrc" ~/.minrc
mkdir -p ~/.config/swi-prolog
verbose_link "$DOTFILES/repl/init.pl" ~/.config/swi-prolog/init.pl
verbose_link "$DOTFILES/repl/.scryerrc" ~/.scryerrc
verbose_link "$DOTFILES/repl/gforthrc" ~/.config/gforthrc
verbose_link "$DOTFILES/repl/.irbrc" ~/.irbrc

# Cmus
mkdir -p ~/.config/cmus
verbose_link "$DOTFILES/cmus/rc" ~/.config/cmus/rc
verbose_link "$DOTFILES/cmus/gruvbox-light.theme" ~/.config/cmus/gruvbox-light.theme
verbose_link "$DOTFILES/cmus/xterm-snowwhite.theme" ~/.config/cmus/xterm-snowwhite.theme

# X11
verbose_link "$DOTFILES/x11/.xinitrc" ~/.xinitrc
verbose_link "$DOTFILES/x11/.Xdefaults" ~/.Xdefaults
verbose_link "$DOTFILES/x11/.Xresources" ~/.Xresources

# GTK
mkdir -p ~/.config/gtk-3.0
verbose_link "$DOTFILES/gtk/gtk-3.0/settings.ini" ~/.config/gtk-3.0/settings.ini

# StumpWM
verbose_link "$DOTFILES/stumpwm/" ~/.config/stumpwm

# Rofi
mkdir -p ~/.config/rofi
verbose_link "$DOTFILES/rofi/config" ~/.config/rofi/config
verbose_link "$DOTFILES/rofi/config.rasi" ~/.config/rofi/config.rasi

# Conky
mkdir -p ~/.config/conky
verbose_link "$DOTFILES/conky/conky-birds.conf" ~/.config/conky/conky-birds.conf
verbose_link "$DOTFILES/conky/conky.conf" ~/.config/conky/conky.conf

# Alacritty
mkdir -p ~/.config/alacritty
verbose_link "$DOTFILES/alacritty/alacritty.yml" ~/.config/alacritty/alacritty.yml

# Xpdf
mkdir -p ~/.config/xpdf
verbose_link "$DOTFILES/xpdf/.xpdfrc" ~/.xpdfrc


test $relevant -gt 0 && echo "Relevant:  $relevant"
test $relinked -gt 0 && echo "Relinked:  $relinked"
test $notfound -gt 0 && echo "Notfound:  $notfound"
test $skipped  -gt 0 && echo "Skipped:   $skipped"
test $planted  -gt 0 && echo "Planted:   $planted"
